version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: intellifin-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: intellifin
      POSTGRES_USER: intellifin
      POSTGRES_PASSWORD: password
      POSTGRES_MULTIPLE_EXTENSIONS: uuid-ossp,pgcrypto
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - intellifin-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U intellifin -d intellifin"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: intellifin-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - intellifin-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Mailhog (Development Email Testing)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: intellifin-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    networks:
      - intellifin-network

  # MinIO (S3-compatible storage for development)
  minio:
    image: minio/minio:latest
    container_name: intellifin-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: intellifin
      MINIO_ROOT_PASSWORD: password123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - intellifin-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Backend API (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: intellifin-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://intellifin:password@postgres:5432/intellifin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-jwt-secret-change-in-production
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      STORAGE_ENDPOINT: http://minio:9000
      STORAGE_ACCESS_KEY: intellifin
      STORAGE_SECRET_KEY: password123
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - /app/dist
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - intellifin-network
    command: npm run start:dev

  # Frontend (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: intellifin-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXT_PUBLIC_APP_URL: http://localhost:3000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - intellifin-network
    command: npm run dev

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local

networks:
  intellifin-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
